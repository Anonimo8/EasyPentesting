import os

#    \t )WHOIS (Requiere tener instalado WHOIS)
#    \t )Enumerar DNS (Requiere tener instalado DNSENUM)

os.system('clear')

SCAN_AUTH = 1
SCAN_VULN = 2
SCAN_BASICO = 3
SCAN_HOST_ON = 4
SCAN_ALL = 5
SERVICIOS_ABIERTOS = 6
OS = 7
#MS12_020 = 8
SCAN_PHP_VERSION = 8
JOOMLA = 9
WORDPRESS = 10
DBS = 11
INFRAESTRUCTURAS_IND = 12
PROTOCOLOS_SERVICIOS = 13
GEO_HOST = 14
#WHOIS = 6
#DNSENUM = 7
CAMBIAR_IP = 99
SALIR = 0

ip = input('IP a escanear: ')

i = True

while i:

    print('\n')

    print('\t\t\t\t Bienvenido a EasyPentesting')
    print('\t\t\t\t\t    by tomZ')
    #print('\t\t  Recuerda que es necesario tener instalado Nmap en tu PC')

    print('\n')

    print('IP seleccionada: ' + ip)

    print('''
    \t1)Escanear para encontrar vulnerabilidades de autenticaciÃ³n( --script auth )
    \t2)Escanear para encontrar vulnerabilidades conocidas( --script vuln )
    \t3)Escaneo basico predeterminado
    \t4)Escaneo para saber si el host esta encendido( -sP )
    \t5)Escaneo completo (--script all)
    \t6)Escanear servicios abiertos del host
    \t7)Escaneo para saber el SO del host
    \t8)Escaneo para saber la version de PHP de una pagina web
    \t9)Joomla
    \t10)WordPress
    \t11)DBs
    \t12)Infraestructuras Industriales
    \t13)Protocolos/Servicios
    \t14)Geolocalizar host

    \t99) Cambiar IP
    \t0)Salir
    ''')

    opc = int(input('EasyPentesting >> '))

    if opc == SCAN_AUTH:
        os.system('nmap -O -sV -D 1.1.1.1,8.8.8.8 -O --script auth ' + ip)
    elif  opc == SCAN_VULN:
        os.system('nmap -sV -D 1.1.1.1,8.8.8.8 -O --script vuln ' + ip)
    elif opc == SCAN_BASICO:
        os.system('nmap ' + ip)
    elif opc == SCAN_HOST_ON:
        os.system('nmap -sP ' + ip)
    elif opc == SCAN_ALL:
        os.system('nmap -O -sV -D 1.1.1.1,8.8.8.8 -O --script all ' + ip)
    elif opc == SERVICIOS_ABIERTOS:
        os.system('nmap -sV -D 1.1.1.1,8.8.8.8 ' + ip)
    elif opc == OS:
        os.system('nmap -O ' + ip)
    elif opc == SCAN_PHP_VERSION:
        os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-php-version.nse '+ip)
    elif opc == JOOMLA:
        JOOMLA_BRUTE = 1
        SALIR_JOOMBLA = 0
        print('''
        1) http-joomla-brute.nse

        0)SALIR
        ''')
        opc_joomla = int(input('EasyPentesting >> Joomla >> '))
        if opc_joomla == JOOMLA_BRUTE:
            os.system('clear')
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-joomla-brute.nse ' + ip)
        elif opc_joomla == SALIR_JOOMBLA:
            i = False
    elif opc == WORDPRESS:
        WORDPRESS_BRUTE = 1
        WORDPRESS_ENUM = 2
        WORDRPRESS_PLUGINS = 3
        WORDPRESS_SALIR = 0
        print('''
        1) http-wordpress-brute.nse
        2) http-wordpress-enum.nse
        3) http-wordpress-plugins.nse

        0)SALIR
        ''')
        opc_wordpress = int(input('EasyPentesting >> WordPress >> '))
        if opc_wordpress == WORDPRESS_BRUTE:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-wordpress-brute.nse ' + ip)
        elif opc_wordpress == WORDPRESS_ENUM:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-wordpress-enum.nse ' + ip)
        elif opc_wordpress == WORDRPRESS_PLUGINS:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-wordpress-plugins.nse ' + ip)
        elif opc_wordpress == WORDPRESS_SALIR:
            i = False

    elif opc == DBS:
        CASSANDRA = 1
        COUCHDB = 2
        DB2 = 3
        HBASE = 4
        INFORMIX = 5
        MAXDB = 6
        MONGODB = 7
        MSSQL = 8
        MYSQL = 9
        ORACLE = 10
        POSTGRESQL = 11
        REDIS = 12
        RIAK = 13

        print('''
        1) CASSANDRA
        2) COUCHDB
        3) DB2
        4) HBASE
        5) INFORMIX
        6) MAXDB
        7) MONGODB
        8) MSSQL
        9) MYSQL
        10) ORACLE
        11) POSTGRESQL
        12) REDIS
        13) RIAK

        0)SALIR''')

        opc_dbs = int(input('EasyPentesting >> DBs >> '))

        if opc_dbs == CASSANDRA:
            CASSANDRA_BRUTE = 1
            CASSANDRA_INFO = 2
            CASSANDRA_SALIR = 0
            print('''
            1) cassandra-brute.nse
            2) cassandra-info.nse

            0)SALIR
            ''')
            opc_dbs_cassandra = int(input('EasyPentesting >> DBs >> Cassandra >> '))
            if opc_dbs_cassandra == CASSANDRA_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=cassandra-brute.nse ' + ip)
            elif opc_dbs_cassandra == CASSANDRA_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=cassandra-info.nse ' + ip)
            elif opc_dbs_cassandra == CASSANDRA_SALIR:
                i = False

        elif opc_dbs == COUCHDB:
            COUCHDB_DATABASES = 1
            COUCHDB_STATS = 2
            COUCHDB_SALIR = 0
            print('''
            1) couchdb-databases.nse
            2) couchdb-stats.nse

            0)SALIR
            ''')
            opc_dbs_couchdb = int(input('EasyPentesting >> DBs >> CouchDB >>'))
            if opc_dbs_couchdb == COUCHDB_DATABASES:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=couchdb-databases.nse ' + ip )
            elif opc_dbs_couchdb == COUCHDB_STATS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=couchdb-stats.nse ' + ip )
            elif opc_dbs_couchdb == COUCHDB_SALIR:
                i = False

        elif opc_dbs  == DB2:
            BROADCAST_DBS2_DISCOVER = 1
            DB2_DAS_INFO = 2
            DRDA_INFO = 3
            DRDA_BRUTE = 4
            DB2_SALIR = 0

            print('''
            1) broadcast-db2-discover.nse
            2) db2-das-info.nse
            3) drda-info.nse
            4) drda-brute.nse

            0)SALIR
            ''')
            opc_dbs_db2 = int(input('EasyPentesting >> DBs >> DB2 >>'))
            if opc_dbs_db2 == BROADCAST_DBS2_DISCOVER:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=broadcast-db2-discover.nse ' + ip )
            elif opc_dbs_db2 == DB2_DAS_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=db2-das-info.nse ' + ip )
            elif opc_dbs_db2 == DRDA_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=drda-info.nse ' + ip )
            elif opc_dbs_db2 == DRDA_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=drda-brute.nse ' + ip )
            elif opc_dbs_db2 == DB2_SALIR:
                i = False

        elif opc_dbs == HBASE:
            HBASE_MASTER_INFO = 1
            HBASE_REGION_INFO = 2
            HBASE_SALIR = 0
            print('''
            1) hbase-master-info.nse
            2) hbase-region-info.nse

            0)SALIR
            ''')
            opc_dbs_hbase = int(input('EasyPentesting >> DBs >> Apache HBase >> '))
            if opc_dbs_hbase == HBASE_MASTER_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=hbase-master-info.nse ' + ip )
            elif opc_dbs_hbase == HBASE_REGION_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=hbase-region-info.nse ' + ip )
            elif opc_dbs_hbase == HBASE_SALIR:
                i = False

        elif opc_dbs == INFORMIX:
            INFORMIX_BRUTE = 1
            INFORMIX_DRDA_INFO = 2
            INFORMIX_DRDA_BRUTE = 3
            INFORMIX_SALIR = 0
            print('''
            1) informix-brute.nse
            2) drda-info.nse
            3) drda-brute.nse

            0)SALIR
            ''')
            opc_dbs_informix = int(input('EasyPentesting >> DBs >> IBM Informix >> '))
            if opc_dbs_informix == INFORMIX_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=informix-brute.nse ' + ip )
            elif opc_dbs_informix == INFORMIX_DRDA_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=drda-info.nse ' + ip )
            elif opc_dbs_informix == INFORMIX_DRDA_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=drda-brute.nse ' + ip )
            elif opc_dbs_informix == INFORMIX_SALIR:
                i = False

        elif opc_dbs == MAXDB:
            MAXDB_INFO = 1
            MAXDB_SALIR = 0
            print('''
            1) maxdb-info.nse

            0)SALIR
            ''')
            opc_dbs_maxdb = int(input('EasyPentesting >> DBs >> SAP MaxDB >> '))
            if opc_dbs_maxdb == MAXDB_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=maxdb-info.nse ' + ip )
            elif opc_dbs_maxdb == MAXDB_SALIR:
                i = False

        elif opc_dbs == MONGODB:
            MONGODB_BRUTE = 1
            MONGODB_DBS = 2
            MONGODB_INFO = 3
            MONGODB_SALIR = 0
            print('''
            1) mongodb-brute.nse
            2) mongodb-databases.nse
            3) mongodb-info.nse

            0)SALIR
            ''')
            opc_dbs_mongodb = int(input('EasyPentesting >> DBs >> MongoDB >> '))
            if opc_dbs_mongodb == MONGODB_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=mongodb-brute.nse ' + ip )
            elif opc_dbs_mongodb == MONGODB_DBS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=mongodb-databases.nse ' + ip )
            elif opc_dbs_mongodb == MONGODB_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=mongodb-info.nse ' + ip )
            elif opc_dbs_mongodb == MONGODB_SALIR:
                i = False


        #Falta MSSQL,MYSQL,ORACLE,POSTGRESQL,REDIS y RIAK
        elif opc_dbs == MSSQL:
            BROADCAST_MSSQL_DISCOVER = 1
            MSSQL_BRUTE = 2
            MSSQL_CONFIG = 3
            MSSQL_EMPTY_PASSWORD = 4
            MSSQL_INFO = 5
            MSSQL_XP_CMDSHELL = 6
            MSSQL_SALIR = 0
            print('''
            1) broadcast-ms-sql-discover.nse
            2) ms-sql-brute.nse
            3) ms-sql-config.nse
            4) ms-sql-empty-password.nse
            5) ms-sql-info.nse
            6) ms-sql-xp-cmdshell.nse

            0)SALIR
            ''')
            opc_dbs_mssql = int(input('EasyPentesting >> DBs >> MSSQL >> '))
            if opc_dbs_mssql == BROADCAST_MSSQL_DISCOVER:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=broadcast-ms-sql-discover.nse ' + ip )
            elif opc_dbs_mssql == MSSQL_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8 --script=ms-sql-brute.nse ' + ip )
            elif opc_dbs_mssql == MSSQL_CONFIG:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ms-sql-config.nse ' + ip )
            elif opc_dbs_mssql == MSSQL_EMPTY_PASSWORD:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ms-sql-empty-password.nse ' + ip )
            elif opc_dbs_mssql == MSSQL_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ms-sql-info.nse ' + ip )
            elif opc_dbs_mssql == MSSQL_XP_CMDSHELL:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ms-sql-xp-cmdshell.nse ' + ip )
            elif opc_dbs_mssql == MSSQL_SALIR:
                i = False

        elif opc_dbs == MYSQL:
            MYSQL_AUDIT = 1
            MYSQL_BRUTE = 2
            MYSQL_DBS = 3
            MYSQL_EMPTY_PASSWORD = 4
            MYSQL_ENUM = 5
            MYSQL_INFO = 6
            MYSQL_SALIR = 0
            print('''
            1) mysql-audit.nse
            2) mysql-brute.nse
            3) mysql-databases.nse
            4) mysql-empty-password.nse
            5) mysql-enum.nse
            6) mysql-info.nse

            0)SALIR
            ''')
            opc_dbs_mysql = int(input('EasyPentesting >> DBs >> MySQL >> '))
            if opc_dbs_mysql == MYSQL_AUDIT:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=mysql-audit.nse ' + ip )
            elif opc_dbs_mysql == MYSQL_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=mysql-brute.nse ' + ip )
            elif opc_dbs_mysql == MYSQL_DBS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=mysql-databases.nse ' + ip )
            elif opc_dbs_mysql == MYSQL_EMPTY_PASSWORD:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=mysql-empty-password.nse ' + ip )
            elif opc_dbs_mysql == MYSQL_ENUM:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=mysql-enum.nse ' + ip )
            elif opc_dbs_mysql == MYSQL_INFO:
                os.system('nmap-D 1.1.1.1,8.8.8.8 --script=mysql-info.nse ' + ip )
            elif opc_dbs_mysql == MYSQL_SALIR:
                i = False

        elif opc_dbs == ORACLE:
            ORACLE_BRUTE = 1
            ORACLE_ENUM_USERS = 2
            ORACLE_SALIR = 0
            print('''
            1) oracle-brute.nse
            2) oracle-enum-users.nse

            0)SALIR
            ''')
            opc_dbs_oracle = int(input('EasyPentesting >> DBs >> Oracle >> '))
            if opc_dbs_oracle == ORACLE_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=oracle-brute.nse ' + ip )
            elif opc_dbs_oracle == ORACLE_ENUM_USERS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=oracle-enum-users.nse ' + ip )
            elif opc_dbs_oracle == ORACLE_SALIR:
                i = False

        elif opc_dbs == POSTGRESQL:
            POSTGRESQL_BRUTE = 1
            POSTGRESQL_SALIR = 0
            print('''
            1) pgsql-brute.nse

            0)SALIR
            ''')
            opc_dbs_postgresql = int(input('EasyPentesting >> DBs >> PostgreSQL >> '))
            if opc_dbs_postgresql == POSTGRESQL_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=pgsql-brute.nse ' + ip )
            elif opc_dbs_postgresql == POSTGRESQL_SALIR:
                i = False

        elif opc_dbs == REDIS:
            REDIS_BRUTE = 1
            REDIS_INFO = 2
            REDIS_SALIR = 0
            print('''
            1) redis-brute.nse
            2) redis-info.nse

            0)SALIR
            ''')
            opc_dbs_redis = int(input('EasyPentesting >> DBs >> Redis >> '))
            if opc_dbs_redis == REDIS_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=redis-brute.nse ' + ip )
            elif opc_dbs_redis == REDIS_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=redis-info.nse '+ ip )
            elif opc_dbs_redis == REDIS_SALIR:
                i = False

        elif opc_dbs == RIAK:
            RIAK_HTTP_INFO = 1
            RIAK_SALIR = 0
            print('''
            1) riak-http-info.nse

            0)SALIR
            ''')
            opc_dbs_riak = int(input('EasyPentesting >> DBs >> Riak >> '))
            if opc_dbs_riak == RIAK_HTTP_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=riak-http-info.nse ' + ip )
            elif opc_dbs_riak == RIAK_SALIR:
                i = False


    elif opc == INFRAESTRUCTURAS_IND:
        BACNET_INFO = 1
        ENIP_INFO = 2
        FOX_INFO = 3
        MODBUS_DISCOVER = 4
        MQTT_SUBSCRIBE = 5
        OMRON_INFO = 6
        PCWORX_INFO = 7
        S7_INFO = 8
        INF_IND_SALIR = 0
        print('''
        1) bacnet-info.nse
        2) enip-info.nse
        3) fox-info.nse
        4) modbus-discover.nse
        5) mqtt-subscribe.nse
        6) omron-info.nse
        7) pcworx-info.nse
        8) s7-info.nse

        0)SALIR
        ''')
        opc_inf_ind = int(input('EasyPentesting >> Infraestructuras Ind. >> '))
        if opc_inf_ind == BACNET_INFO:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=bacnet-info.nse ' + ip )
        elif opc_inf_ind == ENIP_INFO:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=enip-info.nse ' + ip )
        elif opc_inf_ind == FOX_INFO:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=fox-info.nse ' + ip )
        elif opc_inf_ind == MODBUS_DISCOVER:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=modbus-discover.nse ' + ip )
        elif opc_inf_ind == MQTT_SUBSCRIBE:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=mqtt-subscribe.nse ' +ip )
        elif opc_inf_ind == OMRON_INFO:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=omron-info.nse '+ ip )
        elif opc_inf_ind == PCWORX_INFO:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=pcworx-info.nse ' + ip )
        elif opc_inf_ind == S7_INFO:
            os.system('nmap -D 1.1.1.1,8.8.8.8 --script=s7-info.nse ' + ip )

    elif opc == PROTOCOLOS_SERVICIOS:
        DHCP = 1
        DNS = 2
        FTP = 3
        HTTP = 4
        IMAP = 5
        LDAP = 6
        RDP = 7
        RLOGIN = 8
        SIP = 9
        SMB = 10
        SMTP = 11
        SNMP = 12
        SSL = 13
        SVN = 14
        TELNET = 15
        TFTP = 16
        UPNP = 17
        VNC = 18
        PROTOCOLOS_SERVICIOS_SALIR = 0
        print('''
        1) DHCP
        2) DNS
        3) FTP
        4) HTTP
        5) IMAP
        6) LDAP
        7) RDP
        8) RLOGIN
        9) SIP
        10) SMB
        11) SMTP
        12) SNMP
        13) SSL
        14) SVN
        15) Telnet
        16) TFTP
        17) UPNP
        18) VNC

        0)SALIR
        ''')
        opc_prot_serv = int(input('EasyPentesting >> Protocolos/Servicios >> '))
        if opc_prot_serv == DHCP:
            DHCP_DISCOVER = 1
            BROADCAS_DHCP_DISCOVER = 2
            BROADCAST_DHCP6_DISCOVER = 3
            DHCP_SALIR = 0
            print('''
            1) dhcp-discover.nse
            2) broadcast-dhcp-discover.nse
            3) broadcast-dhcp6-discover.nse

            0)SALIR
            ''')
            opc_prot_serv_dhcp = int(input('EasyPentesting >> Protocolos/Servicios >> DHCP >> '))
            if opc_prot_serv_dhcp == DHCP_DISCOVER:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=dhcp-discover.nse ' + ip )
            elif opc_prot_serv_dhcp == BROADCAS_DHCP_DISCOVER:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=broadcast-dhcp-discover.nse ' + ip )
            elif opc_prot_serv_dhcp == BROADCAST_DHCP6_DISCOVER:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=broadcast-dhcp6-discover.nse ' + ip )
            elif opc_prot_serv_dhcp == DHCP_SALIR:
                i = False

        elif opc_prot_serv == DNS:
            DNS_BRUTE = 1
            DNS_CACHE_SNOOP = 2
            DNS_CHECK_ZONE = 3
            DNS_FUZZ = 4
            DNS_RECURSION = 5
            DNS_SERVICE_DISCOVERY = 6
            DNS_SRV_ENUM = 7
            DNS_ZONE_TRANSFER = 8
            DNS_SALIR = 0
            print('''
            1) dns-brute.nse
            2) dns-cache-snoop.nse
            3) dns-check-zone.nse
            4) dns-fuzz.nse
            5) dns-recursion.nse
            6) dns-service-discovery.nse
            7) dns-srv-enum.nse
            8) dns-zone-transfer.nse

            0)SALIR
            ''')
            opc_prot_serv_dns = int(input('EasyPentesting >> Protocolos/Servicios >> DNS >> '))

            if opc_prot_serv_dns == DNS_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=dns-brute.nse ' + ip )
            elif opc_prot_serv_dns == DNS_CACHE_SNOOP:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=dns-cache-snoop.nse ' + ip )
            elif opc_prot_serv_dns == DNS_CHECK_ZONE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=dns-check-zone.nse ' + ip )
            elif opc_prot_serv_dns == DNS_FUZZ:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=dns-fuzz.nse ' + ip )
            elif opc_prot_serv_dns == DNS_RECURSION:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=dns-recursion.nse ' + ip )
            elif opc_prot_serv_dns == DNS_SERVICE_DISCOVERY:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=dns-service-discovery.nse ' + ip )
            elif opc_prot_serv_dns == DNS_SRV_ENUM:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=dns-srv-enum.nse ' + ip )
            elif opc_prot_serv_dns == DNS_ZONE_TRANSFER:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=dns-zone-transfer.nse ' + ip )
            elif opc_prot_serv_dns == DNS_SALIR:
                i = False

        elif opc_prot_serv == FTP:
            FTP_ANON = 1
            FTP_BRUTE = 2
            FTP_BOUNCE = 3
            FTP_SALIR = 0
            print('''
            1) ftp-anon.nse
            2) ftp-brute.nse
            3) ftp-bounce.nse

            0)SALIR
            ''')
            opc_prot_serv_ftp = int(input('EasyPentesting >> Protocolos/Servicios >> FTP >> '))
            if opc_prot_serv_ftp == FTP_ANON:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ftp-anon.nse ' + ip )
            elif opc_prot_serv_ftp == FTP_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ftp-brute.nse ' + ip )
            elif opc_prot_serv_ftp == FTP_BOUNCE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ftp-bounce.nse ' + ip )
            elif opc_prot_serv_ftp == FTP_SALIR:
                i = False

        elif opc_prot_serv == HTTP:
            HTTP_AUTH = 1
            HTTP_AUTH_FINDER = 2
            HTTP_BACKUP_FINDER = 3
            HTTP_BRUTE = 4
            HTTP_FORM_BRUTE = 5
            HTTP_CONFIG_BACKUP = 6
            HTTP_DEFAULT_ACCOUNTS = 7
            HTTP_ENUM = 8
            HTTP_METHODS = 9
            HTTP_USERDIR_ENUM = 10
            HTTP_VHOSTS = 11
            HTTP_SALIR = 0
            print('''
            1) http-auth.nse
            2) http-auth-finder.nse
            3) http-backup-finder.nse
            4) http-brute.nse
            5) http-form-brute.nse
            6) http-config-backup.nse
            7) http-default-accounts.nse
            8) http-enum.nse
            9) http-methods.nse
            10) http-userdir-enum.nse
            11) http-vhosts.nse

            0)SALIR
            ''')
            opc_prot_serv_http = int(input('EasyPentesting >> Protocolos/Servicios >> HTTP >> '))
            if opc_prot_serv_http == HTTP_AUTH:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-auth.nse ' + ip )
            elif opc_prot_serv_http == HTTP_AUTH_FINDER:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-auth-finder.nse ' + ip )
            elif opc_prot_serv_http == HTTP_BACKUP_FINDER:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-backup-finder.nse ' + ip )
            elif opc_prot_serv_http == HTTP_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-brute.nse ' + ip )
            elif opc_prot_serv_http == HTTP_FORM_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-form-brute.nse ' + ip )
            elif opc_prot_serv_http == HTTP_CONFIG_BACKUP:
                os.system('nmap -D 1.1.1.1,8.8.8.8 -script=http-config-backup.nse ' + ip )
            elif opc_prot_serv_http == HTTP_DEFAULT_ACCOUNTS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-default-accounts.nse ' + ip )
            elif opc_prot_serv_http == HTTP_ENUM:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-enum.nse ' + ip )
            elif opc_prot_serv_http == HTTP_METHODS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-methods.nse ' + ip )
            elif opc_prot_serv_http == HTTP_USERDIR_ENUM:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-userdir-enum.nse ' + ip )
            elif opc_prot_serv_http == HTTP_VHOSTS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-vhosts.nse ' + ip )
            elif opc_prot_serv_http == HTTP_SALIR:
                i = False

        elif opc_prot_serv == IMAP:
            IMAP_BRUTE = 1
            IMAP_CAPABILITIES = 2
            IMAP_NTLM_INFO = 3
            IMAP_SALIR = 0
            print('''
            1) imap-brute.nse
            2) imap-capabilities.nse
            3) imap-ntlm-info.nse

            0)SALIR
            ''')
            opc_prot_serv_imap = int(input('EasyPentesting >> Protocolos/Servicios >> IMAP >> '))
            if opc_prot_serv_imap == IMAP_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=imap-brute.nse ' + ip )
            elif opc_prot_serv_imap == IMAP_CAPABILITIES:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=imap-capabilities.nse ' + ip )
            elif opc_prot_serv_imap == IMAP_NTLM_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=imap-ntlm-info.nse ' + ip )
            elif opc_prot_serv_imap == IMAP_SALIR:
                i = False

        elif opc_prot_serv == LDAP:
            LDAP_BRUTE = 1
            LDAP_SEARCH = 2
            LDAP_SALIR = 0
            print('''
            1) ldap-brute.nse
            2) ldap-search.nse

            0)SALIR
            ''')
            opc_prot_serv_ldap = int(input('EasyPentesting >> Protocolos/Servicios >> LDAP >> '))
            if opc_prot_serv_ldap == LDAP_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ldap-brute.nse ' + ip )
            elif opc_prot_serv_ldap == LDAP_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ldap-search.nse ' + ip )
            elif opc_prot_serv_ldap == LDAP_BRUTE:
                i = False

        elif opc_prot_serv == RDP:
            RDP_ENUM_ENCRYPTION = 1
            RDP_MS12_020 = 2
            RDP_SALIR = 0
            print('''
            1) rdp-enum-encryption.nse
            2) rdp-vuln-ms12-020.nse

            0)SALIR
            ''')
            opc_prot_serv_rdp = int(input('EasyPentesting >> Protocolos/Servicios >> RDP >> '))
            if opc_prot_serv_rdp == RDP_ENUM_ENCRYPTION:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=rdp-enum-encryption.nse ' + ip )
            elif opc_prot_serv_rdp == RDP_MS12_020:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=rdp-vuln-ms12-020.nse  ' + ip )
            elif opc_prot_serv_rdp == RDP_SALIR:
                i = False

        elif opc_prot_serv == RLOGIN:
            RLOGIN_BRUTE = 1
            RLOGIN_SALIR = 0
            print('''
            1) rlogin-brute.nse

            0)SALIR
            ''')
            opc_prot_serv_rlog = int(input('EasyPentesting >> Protocolos/Servicios >> RLogin >> '))
            if opc_prot_serv_rlog == RLOGIN_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=rlogin-brute.nse ' + ip )
            elif opc_prot_serv_rlog == RLOGIN_SALIR:
                i = False

        elif opc_prot_serv == SIP:
            SIP_BRUTE = 1
            SIP_CALL_SPOOF = 2
            SIP_ENUM_USERS = 3
            SIP_METHODS = 4
            SIP_SALIR = 0
            print('''
            1) sip-brute.nse
            2) sip-call-spoof.nse
            3) sip-enum-users.nse
            4) sip-methods.nse

            0)SALIR
            ''')
            opc_prot_serv_sip = int(input('EasyPentesting >> Protocolos/Servicios >> SIP >> '))
            if opc_prot_serv_sip == SIP_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=sip-brute.nse ' + ip )
            elif opc_prot_serv_sip == SIP_CALL_SPOOF:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=sip-call-spoof.nse ' + ip )
            elif opc_prot_serv_sip == SIP_ENUM_USERS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=sip-enum-users.nse ' + ip )
            elif opc_prot_serv_sip == SIP_METHODS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=sip-methods.nse ' + ip )
            elif opc_prot_serv_sip == SIP_SALIR:
                i = False


        elif opc_prot_serv == SMB:
            SMB_BRUTE = 1
            SMB_ENUM_DOMAINS = 2
            SMB_ENUM_GROUPS = 3
            SMB_ENUM_PROCESSES = 4
            SMB_ENUM_SESSIONS = 5
            SMB_ENUM_SHARES = 6
            SMB_ENUM_USERS = 7
            SMB_FLOOD = 8
            SMB_LS = 9
            SMB_MBENUM = 10
            SMB_OS_DISCOVERY = 11
            SMB_PRINT_TEXT = 12
            SMB_PSEXEC = 13
            SMB_SECURITY_MODE = 14
            SMB_SERVER_STATS = 15
            SMB_SYSTEM_INFO = 16
            SMBV2_ENABLED = 17
            SMB_SALIR = 0
            print('''
            1) smb-brute.nse
            2) smb-enum-domains.nse
            3) smb-enum-groups.nse
            4) smb-enum-processes.nse
            5) smb-enum-sessions.nse
            6) smb-enum-shares.nse
            7) smb-enum-users.nse
            8) smb-flood.nse
            9) smb-ls.nse
            10) smb-mbenum.nse
            11) smb-os-discovery.nse
            12) smb-print-text.nse
            13) smb-psexec.nse
            14) smb-security-mode.nse
            15) smb-server-stats.nse
            16) smb-system-info.nse
            17) smbv2-enabled.nse

            0) SALIR
            ''')
            opc_prot_serv_smb = int(input('EasyPentesting >> Protocolos/Servicios >> SMB >> '))
            if opc_prot_serv_smb == SMB_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-brute.nse ' + ip )
            elif opc_prot_serv_smb == SMB_ENUM_DOMAINS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-enum-domains.nse ' + ip )
            elif opc_prot_serv_smb == SMB_ENUM_GROUPS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-enum-groups.nse ' + ip )
            elif opc_prot_serv_smb == SMB_ENUM_PROCESSES:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-enum-processes.nse ' + ip )
            elif opc_prot_serv_smb == SMB_ENUM_SESSIONS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-enum-sessions.nse ' + ip )
            elif opc_prot_serv_smb == SMB_ENUM_SHARES:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-enum-shares.nse ' + ip )
            elif opc_prot_serv_smb == SMB_ENUM_USERS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-enum-users.nse ' + ip )
            elif opc_prot_serv_smb == SMB_FLOOD:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-flood.nse ' + ip )
            elif opc_prot_serv_smb == SMB_LS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-ls.nse ' + ip )
            elif opc_prot_serv_smb == SMB_MBENUM:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-mbenum.nse ' + ip )
            elif opc_prot_serv_smb == SMB_OS_DISCOVERY:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-os-discovery.nse ' + ip )
            elif opc_prot_serv_smb == SMB_PRINT_TEXT:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-print-text.nse ' + ip )
            elif opc_prot_serv_smb == SMB_PSEXEC:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-psexec.nse ' + ip )
            elif opc_prot_serv_smb == SMB_SECURITY_MODE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-security-mode.nse ' + ip )
            elif opc_prot_serv_smb == SMB_SERVER_STATS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-server-stats.nse ' + ip )
            elif opc_prot_serv_smb == SMB_SYSTEM_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smb-system-info.nse ' + ip )
            elif opc_prot_serv_smb == SMBV2_ENABLED:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smbv2-enabled.nse ' + ip )
            elif opc_prot_serv_smb == SMB_SALIR:
                i = False

        elif opc_prot_serv == SMTP:
            SMTP_BRUTE = 1
            SMTP_COMMANDS = 2
            SMTP_ENUM_USERS = 3
            SMTP_OPEN_RELAY = 4
            SMTP_SALIR = 0
            print('''
            1) smtp-brute.nse
            2) smtp-commands.nse
            3) smtp-enum-users.nse
            4) smtp-open-relay.nse

            0)SALIR
            ''')
            opc_prot_serv_smtp = int(input('EasyPentesting >> Protocolos/Servicios >> SMTP >> '))
            if opc_prot_serv_smtp == SMTP_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smtp-brute.nse ' + ip )
            elif opc_prot_serv_smtp == SMTP_COMMANDS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smtp-commands.nse ' + ip )
            elif opc_prot_serv_smtp == SMTP_ENUM_USERS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smtp-enum-users.nse ' + ip )
            elif opc_prot_serv_smtp == SMTP_OPEN_RELAY:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=smtp-open-relay.nse ' + ip )
            elif opc_prot_serv_smtp == SMTP_SALIR:
                i = False


        elif opc_prot_serv == SNMP:
            SNMP_INFO = 1
            SNMP_INTERFACES = 2
            SNMP_IOS_CONFIG = 3
            SNMP_NETSTAT = 4
            SNMP_SALIR = 0

            print('''
            1) snmp-info.nse
            2) snmp-interfaces.nse
            3) snmp-ios-config.nse
            4) snmp-netstat.nse

            0)SALIR
            ''')
            opc_prot_serv_snmp = int(input('EasyPentesting >> Protocolos/Servicios >> SNMP >> '))
            if opc_prot_serv_snmp == SNMP_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=snmp-info.nse ' + ip )
            elif opc_prot_serv_snmp == SNMP_INTERFACES:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=snmp-interfaces.nse ' + ip )
            elif opc_prot_serv_snmp == SNMP_IOS_CONFIG:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=snmp-ios-config.nse ' + ip )
            elif opc_prot_serv_snmp == SNMP_NETSTAT:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=snmp-netstat.nse ' + ip )
            elif opc_prot_serv_snmp == SNMP_SALIR:
                i = False

        elif opc_prot_serv == SSL:
            SSL_CCS_INJECTION = 1
            SSL_CERT = 2
            SSL_CERT_INTADDR = 3
            SSL_DATE = 4
            SSL_DH_PARAMS = 5
            SSL_ENUM_CIPHERS = 6
            SSL_HEARTBLEED = 7
            SSL_KNOW_KEY = 8
            SSL_POODLE = 9
            SSLV2 = 10
            SSLV2_DROWN = 11
            SSL_SALIR = 0
            print('''
            1) ssl-ccs-injection.nse
            2) ssl-cert.nse
            3) ssl-cert-intaddr.nse
            4) ssl-date.nse
            5) ssl-dh-params.nse
            6) ssl-enum-ciphers.nse
            7) ssl-heartbleed.nse
            8) ssl-known-key.nse
            9) ssl-poodle.nse
            10) sslv2.nse
            11) sslv2-drown.nse

            0)SALIR
            ''')
            opc_prot_serv_ssl = int(input('EasyPentesting >> Protocolos/Servicios >> SSL >> '))
            if opc_prot_serv_ssl == SSL_CCS_INJECTION:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ssl-ccs-injection.nse ' + ip )
            elif opc_prot_serv_ssl == SSL_CERT:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ssl-cert.nse ' + ip )
            elif opc_prot_serv_ssl == SSL_CERT_INTADDR:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ssl-cert-intaddr.nse ' + ip )
            elif opc_prot_serv_ssl == SSL_DATE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ssl-date.nse ' + ip )
            elif opc_prot_serv_ssl == SSL_DH_PARAMS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ssl-dh-params.nse ' + ip )
            elif opc_prot_serv_ssl == SSL_ENUM_CIPHERS:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ssl-enum-ciphers.nse ' + ip )
            elif opc_prot_serv_ssl == SSL_HEARTBLEED:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ssl-heartbleed.nse ' + ip )
            elif opc_prot_serv_ssl == SSL_KNOW_KEY:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ssl-known-key.nse ' + ip )
            elif opc_prot_serv_ssl == SSL_POODLE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ssl-poodle.nse ' + ip )
            elif opc_prot_serv_ssl == SSLV2:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=sslv2.nse ' + ip )
            elif opc_prot_serv_ssl == SSLV2_DROWN:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=sslv2-drown.nse ' + ip )
            elif opc_prot_serv_ssl == SSL_SALIR:
                i = False


        elif opc_prot_serv == SVN:
            SVN_BRUTE = 1
            SVN_ENUM = 2
            SVN_INFO = 3
            SVN_SALIR = 0
            print('''
            1) svn-brute.nse
            2) http-svn-enum.nse
            3) http-svn-info.nse

            0)SALIR
            ''')
            opc_prot_serv_svn = int(input('EasyPentesting >> Protocolos/Servicios >> SVN >> '))
            if opc_prot_serv_svn == SVN_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=svn-brute.nse ' + ip)
            elif opc_prot_serv_svn == SVN_ENUM:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-svn-enum.nse ' + ip)
            elif opc_prot_serv_svn == SVN_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=http-svn-info.nse ' + ip)
            elif opc_prot_serv_svn == SVN_SALIR:
                i = False


        elif opc_prot_serv == TELNET:
            TELNET_BRUTE = 1
            TELNET_SALIR = 0
            print('''
            1) telnet-brute.nse

            0)SALIR
            ''')
            opc_prot_serv_telnet = int(input('EasyPentesting >> Protocolos/Servicios >> Telnet >> '))
            if opc_prot_serv_telnet == TELNET_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=telnet-brute.nse ' + ip )
            elif opc_prot_serv_telnet == TELNET_SALIR:
                i = False

        elif opc_prot_serv == TFTP:
            TFTP_ENUM = 1
            TFTP_SALIR = 0
            print('''
            1) tftp-enum.nse

            0)SALIR
            ''')
            opc_prot_serv_tftp = int(input('EasyPentesting >> Protocolos/Servicios >> TFTP >> '))
            if opc_prot_serv_tftp == TFTP_ENUM:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=tftp-enum.nse ' + ip )
            elif opc_prot_serv_tftp == TFTP_SALIR:
                i = False

        elif opc_prot_serv == UPNP:
            UPNP_INFO = 1
            BROADCAST_UPNP_INFO = 2
            UPNP = 0
            print('''
            1) upnp-info.nse
            2) broadcast-upnp-info.nse

            0)SALIR
            ''')
            opc_prot_serv_upnp = int(input('EasyPentesting >> Protocolos/Servicios >> UPNP >> '))
            if opc_prot_serv_upnp == UPNP_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=upnp-info.nse ' + ip )
            elif opc_prot_serv_upnp == BROADCAST_UPNP_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=broadcast-upnp-info.nse  ' + ip )
            elif opc_prot_serv_upnp == UPNP_INFO:
                i = False
        elif opc_prot_serv == VNC:
            VNC_BRUTE = 1
            VNC_INFO = 2
            VNC_SALIR = 0
            print('''
            1) vnc-brute.nse
            2) vnc-info.nse

            0)SALIR
            ''')
            opc_prot_serv_vnc = int(input('EasyPentesting >> Protocolos/Servicios >> VNC >> '))
            if opc_prot_serv_vnc == VNC_BRUTE:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=vnc-brute.nse ' + ip )
            elif opc_prot_serv_vnc == VNC_INFO:
                os.system('nmap -D 1.1.1.1,8.8.8.8 --script=vnc-info.nse ' + ip )
            elif opc_prot_serv_vnc == VNC_SALIR:
                i = False
    
    elif opc == GEO_HOST:
        os.system('nmap -D 1.1.1.1,8.8.8.8 --script=ip-geolocation-map-google.nse ' + ip)

    elif opc == SALIR:
        i = False
    elif opc == CAMBIAR_IP:
        ip = input('IP a escanear: ')
    else:
        print('No reconoci tu opcion')

'''elif opc == WHOIS:
    os.system('whois ' + ip)
elif opc == DNSENUM:
    os.system('dnsenum ' + ip)'''

# https://www.hacking4badpentesters.com/2017/04/scripts-nmap-para-tener-mano-si-sos.html


#Geolocalizacion via google: ip-geolocation-map-google.nse
#Falta agregar las vulnerabilidades web
